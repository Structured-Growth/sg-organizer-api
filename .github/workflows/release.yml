name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  packages: write
  pull-requests: write
  issues: read

jobs:
  # 1. run unit test
  #  unit-tests:
  #    name: Unit tests
  #    uses: ./.github/workflows/unit-tests.yml
  #    secrets:
  #      EC2_PUBLIC_IP: ${{ secrets.EC2_PUBLIC_IP }}
  #      EC2_SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
  #      NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
  #      DB_ENDPOINT: ${{ secrets.DB_ENDPOINT }}
  #      DB_PORT: ${{ secrets.DB_PORT }}
  #      DB_NAME: ${{ secrets.DB_NAME }}
  #      DB_MASTER_USERNAME: ${{ secrets.DB_MASTER_USERNAME }}
  #      DB_MASTER_PASSWORD: ${{ secrets.DB_MASTER_PASSWORD }}
  #      DB_SCHEMA: ${{ secrets.DB_SCHEMA }}

  # 2. lint commit messages
  #    lint-commit:
  #      needs: [unit-tests]
  #      name: Commit lint
  #      uses: ./.github/workflows/commitlint.yml
  #      if: success()

  # 3. prettier check
  prettier-check:
    name: Prettier check
    uses: ./.github/workflows/prettier.yml
    if: success()

  # 4. dependencies generate report
  dependencies:
    needs: [ prettier-check ]
    name: Dependencies
    uses: ./.github/workflows/dependencies.yml
    secrets:
      NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      REPORT_TITLE: Devices API dependencies report
    if: success()

  # 5. documentation generate reports
  documentation:
    needs: [ prettier-check, dependencies ]
    name: Security check
    uses: ./.github/workflows/documentation.yml
    if: success()

  # 6. release create
  release:
    needs: [ prettier-check, dependencies, documentation ]
    name: Release
    runs-on: ubuntu-latest
    env:
      DOCKER_REGISTRY_USER: ${{ secrets.DOCKER_REGISTRY_USER }}
      DOCKER_REGISTRY_PASSWORD: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm i

      - name: Update routes
        run: npm run routes

      - name: Build
        run: npm run build

      - name: Authenticate in docker registry
        run: aws ecr get-login-password | docker login --username AWS --password-stdin $REGISTRY_URI

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: node_modules/.bin/semantic-release
    if: success()

  # 7. slack notification about created release
  notify-slack:
    needs: [ prettier-check, dependencies, documentation, release ]
    name: Notify Slack
    uses: ./.github/workflows/slack-notification-rel.yml
    with:
      env: "Create Release"
      workflow_run_id: ${{ github.run_id }}
    secrets:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    if: success()